{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/beach.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","Preloader","className","classes","headerImage","src","require","descriptionBlock","photos","large","userPhoto","profilePhoto","type","target","files","length","fullName","Post","item","message","likesCount","MyPosts","memo","postsElements","posts","reverse","map","p","key","id","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.0c352692.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n\n    return ConnectedAuthRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"headerImage\":\"ProfileInfo_headerImage__3ho9F\",\"profilePhoto\":\"ProfileInfo_profilePhoto__9KLOb\"};","module.exports = __webpack_public_path__ + \"static/media/beach.5c8e984d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\n            </div>\n            }\n        </div>\n    )\n};\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.headerImage}>\n                <img src={require(\"./beach.jpg\")}/>\n            </div>\n            <div className={classes.descriptionBlock}>\n                <div><img src={profile.photos.large || userPhoto} className={classes.profilePhoto}/></div>\n                <div>{isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}</div>\n                <div>{profile.fullName}</div>\n                <ProfileStatusWithHooks status={status}\n                                        updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n};\n\nexport default ProfileInfo;","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <img\n                src=\"https://img.discogs.com/PaIijDWasqUMoipeFASTvpm9m-Q=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(40)/discogs-images/L-1038806-1472662598-5188.png.jpg\"/>\n            {props.message}\n            <div>\n                <span>Like</span> {props.likesCount}\n            </div>\n        </div>\n    )\n};\n\nexport default Post;","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} key={p.id}\n                                                                  likesCount={p.likesCount}/>);\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div className={classes.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\n            </div>\n            <div className={classes.posts}>{postsElements}</div>\n        </div>\n    )\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name='newPostText'\n                       placeholder='Enter your message'\n                       validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\n\n\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return <div>\n        <ProfileInfo savePhoto={props.savePhoto}\n                     isOwner={props.isOwner}\n                     profile={props.profile}\n                     status={props.status}\n                     updateStatus={props.updateStatus}/>\n        <MyPostsContainer/>\n    </div>\n};\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n\n        this.props.getUserProfile(userId);\n\n        this.props.getStatus(userId);\n\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}