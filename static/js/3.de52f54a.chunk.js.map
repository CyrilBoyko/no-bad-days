{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/beach.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","classes","contact","Contact","contactTitle","contactValue","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","saveProfile","Preloader","headerImage","src","require","descriptionBlock","photos","large","userPhoto","profilePhoto","target","files","length","initialValues","formData","then","Post","item","message","likesCount","MyPosts","memo","postsElements","posts","reverse","p","id","postsBlock","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","actions","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.de52f54a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n\n    return ConnectedAuthRedirectComponent;\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"headerImage\":\"ProfileInfo_headerImage__3ho9F\",\"profilePhoto\":\"ProfileInfo_profilePhoto__9KLOb\",\"contact\":\"ProfileInfo_contact__1N3gp\"};","module.exports = __webpack_public_path__ + \"static/media/beach.5c8e984d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, {useEffect, useState} from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange}\n                       autoFocus={true}\n                       onBlur={deactivateEditMode}\n                       value={status}/>\n            </div>\n            }\n        </div>\n    )\n};\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\nimport classes from './ProfileInfo.module.css';\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <button>save</button>\n            </div>\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            <div>\n                <button>Login</button>\n            </div>\n            <div>\n                <b>Full name:</b> {createField(\"Full name\", \"fullName\", [], Input)}\n            </div>\n            <div>\n                <b>Looking for a job:</b>\n                {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\n            </div>\n            <div>\n                <b>My professional skills:</b>\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\n            </div>\n            <div>\n                <b>About me:</b>\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\n            </div>\n            <div>\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={classes.contact}>\n                    <b>{key}:{createField(key, \"contacts.\" + key, [], Input)}</b>\n                </div>\n            })}\n            </div>\n        </form>\n    )\n};\n\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\";\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/user.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    };\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        );\n    };\n\n    return (\n        <div>\n            <div className={classes.headerImage}>\n                <img src={require(\"./beach.jpg\")}/>\n            </div>\n            <div className={classes.descriptionBlock}>\n                <div>\n                    <img src={profile.photos.large || userPhoto} className={classes.profilePhoto}/>\n                </div>\n                <div>\n                    {isOwner && <input type={\"file\"}\n                                       onChange={onMainPhotoSelected}/>}\n                </div>\n                {editMode\n                    ? <ProfileDataForm initialValues={profile}\n                                       profile={profile}\n                                       onSubmit={onSubmit}/>\n                    : <ProfileData goToEditMode={() => {\n                        setEditMode(true)\n                    }}\n                                   profile={profile}\n                                   isOwner={isOwner}/>}\n                <ProfileStatusWithHooks status={status}\n                                        updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n};\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return (\n        <div className={classes.contact}>\n            <b>{contactTitle}:</b>{contactValue}\n        </div>\n    )\n};\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div>\n            {isOwner && <div>\n                <button onClick={goToEditMode}>edit</button>\n            </div>}\n            <div>\n                <b>Full name:</b> {profile.fullName}\n            </div>\n            <div>\n                <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n            </div>\n            {profile.lookingForAJob && <div>\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\n            </div>}\n            <div>\n                <b>About me:</b> {profile.aboutMe}\n            </div>\n            <div>\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key}\n                                contactTitle={key}\n                                contactValue={profile.contacts[key]}/>\n            })}\n            </div>\n        </div>\n    )\n};\n\nexport default ProfileInfo;","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div className={classes.item}>\n            <img\n                src=\"https://img.discogs.com/PaIijDWasqUMoipeFASTvpm9m-Q=/fit-in/300x300/filters:strip_icc():format(jpeg):mode_rgb():quality(40)/discogs-images/L-1038806-1472662598-5188.png.jpg\"/>\n            {props.message}\n            <div>\n                <span>Like</span> {props.likesCount}\n            </div>\n        </div>\n    )\n};\n\nexport default Post;","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = [...props.posts]\n        .reverse()\n        .map(p => <Post message={p.message}\n                        key={p.id}\n                        likesCount={p.likesCount}/>);\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div className={classes.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\n            </div>\n            <div className={classes.posts}>{postsElements}</div>\n        </div>\n    )\n});\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       name='newPostText'\n                       placeholder='Enter your message'\n                       validate={[required, maxLength10]}/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddNewPostFormRedux = reduxForm({form: 'profileAddNewPostForm'})(AddNewPostForm);\n\n\nexport default MyPosts;","import {actions} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(actions.addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n\n    return <div>\n        <ProfileInfo savePhoto={props.savePhoto}\n                     isOwner={props.isOwner}\n                     profile={props.profile}\n                     status={props.status}\n                     updateStatus={props.updateStatus}\n                     saveProfile={props.saveProfile}/>\n        <MyPostsContainer/>\n    </div>\n};\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n\n        this.props.getUserProfile(userId);\n\n        this.props.getStatus(userId);\n\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"],"sourceRoot":""}