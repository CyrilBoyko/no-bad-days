{"ast":null,"code":"import _objectSpread from\"/Users/a1/Desktop/app/no-bad-days-social-network-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getAuthUserData}from\"./auth-reducer\";var INITIALIZED_SUCCESS='INITIALIZED_SUCCESS';var initialState={initialized:false};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case INITIALIZED_SUCCESS:return _objectSpread({},state,{initialized:true});default:return state;}};export var initializedSuccess=function initializedSuccess(){return{type:INITIALIZED_SUCCESS};};export var initializeApp=function initializeApp(){return function(dispatch){var promise=dispatch(getAuthUserData());promise.then(function(){dispatch(initializedSuccess());});};};export default appReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/redux/app-reducer.ts"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","then"],"mappings":"2KAAA,OAAQA,eAAR,KAA8B,gBAA9B,CAGA,GAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAMA,GAAIC,CAAAA,YAA8B,CAAG,CACjCC,WAAW,CAAE,KADoB,CAArC,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAyD,IAAxDC,CAAAA,KAAwD,2DAAhDH,YAAgD,IAAlCI,CAAAA,MAAkC,2CACxE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,mBAAL,CACI,wBACOI,KADP,EAEIF,WAAW,CAAE,IAFjB,GAIJ,QACI,MAAOE,CAAAA,KAAP,CAPR,CASH,CAVD,CAgBA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAqC,CAACD,IAAI,CAAEN,mBAAP,CAArC,EAA3B,CAEP,MAAO,IAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAmB,CAClD,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB,CACAW,OAAO,CAACC,IAAR,CAAa,UAAM,CACfF,QAAQ,CAACF,kBAAkB,EAAnB,CAAR,CACH,CAFD,EAGH,CAL4B,EAAtB,CAQP,cAAeJ,CAAAA,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\n\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nexport type InitialStateType = {\n    initialized: boolean\n}\n\nlet initialState: InitialStateType = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            };\n        default:\n            return state;\n    }\n};\n\ntype InitializedSuccessActionType = {\n    type: typeof INITIALIZED_SUCCESS\n}\n\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch: any) => {\n    let promise = dispatch(getAuthUserData());\n    promise.then(() => {\n        dispatch(initializedSuccess());\n    })\n};\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}