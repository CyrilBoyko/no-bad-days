{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from \"../../redux/users-reducer\";\nimport Users from \"./Users.jsx\";\nimport Preloader from \"../common/Preloader/Preloader\"; //import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount } from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n      /*this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n          this.props.toggleIsFetching(false);\n          this.props.setUsers(data.items);\n      });*/\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow //toggleFollowingProgress={this.props.toggleFollowingProgress}\n      ,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n/*let mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress,\n    }\n}*/\n\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber));\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount));\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching));\n        }\n        }\n}*/\n\n\nexport default compose( //withAuthRedirect,\nconnect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","setCurrentPage","toggleFollowingProgress","getUsers","follow","unfollow","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,cADJ,EACoBC,uBADpB,EAC6CC,QAD7C,EACuDC,MADvD,EAC+DC,QAD/D,QAEO,2BAFP;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,kBALJ,QAMO,6BANP;;AAQA,MAAMC,cAAN,SAA6Bf,KAAK,CAACgB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,aALyC,GAKxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWf,QAAX,CAAoBc,UAApB,EAAgC,KAAKC,KAAL,CAAWC,QAA3C;AACA;;;;;;AAMH,KAbwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWf,QAAX,CAAoB,KAAKe,KAAL,CAAWG,WAA/B,EAA4C,KAAKH,KAAL,CAAWC,QAAvD;AACH;;AAYDG,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKJ,KAAL,CAAWK,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IADrC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eAAnC;AACO,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKL,aAH3B;AAIO,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWO,KAJzB;AAKO,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWd,MAL1B;AAMO,MAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWb,QAN5B,CAOO;AAPP;AAQO,MAAA,mBAAmB,EAAE,KAAKa,KAAL,CAAWQ,mBARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AA5BwC;AA+B7C;;;;;;;;;;;;AAWA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEtB,QAAQ,CAACyB,KAAD,CADZ;AAEHT,IAAAA,QAAQ,EAAEP,WAAW,CAACgB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEX,kBAAkB,CAACe,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEZ,cAAc,CAACmB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEZ,aAAa,CAACiB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEhB,sBAAsB,CAACkB,KAAD;AANxC,GAAP;AAQH,CATD;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAepB,OAAO,EAClB;AACAR,OAAO,CAAC2B,eAAD,EAAkB;AAACvB,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBJ,EAAAA,cAAnB;AAAmCC,EAAAA,uBAAnC;AAA4DC,EAAAA;AAA5D,CAAlB,CAFW,CAAP,CAGbW,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users.jsx\";\nimport Preloader from \"../common/Preloader/Preloader\";\n//import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n        /*this.props.toggleIsFetching(true);\n        this.props.setCurrentPage(pageNumber);\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items);\n        });*/\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   //toggleFollowingProgress={this.props.toggleFollowingProgress}\n                   followingInProgress={this.props.followingInProgress}/>\n        </>\n    }\n}\n\n/*let mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress,\n    }\n}*/\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n}\n\n/*let mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber));\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount));\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching));\n        }\n        }\n}*/\n\nexport default compose(\n    //withAuthRedirect,\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers})\n)(UsersContainer);"]},"metadata":{},"sourceType":"module"}