{"ast":null,"code":"import axios from\"axios\";var instance=axios.create({baseURL:'https://social-network.samuraijs.com/api/1.0/',withCredentials:true,headers:{\"API-KEY\":\"7201ac99-56ac-41c0-b5a7-4e3d810f5e00\"}});export var usersAPI={getUsers:function getUsers(){var currentPage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var pageSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return instance.get(\"users?page=\".concat(currentPage,\"&count=\").concat(pageSize)).then(function(response){return response.data;});},unfollow:function unfollow(userId){return instance.delete(\"follow/\".concat(userId)).then(function(response){return response.data;});},follow:function follow(userId){return instance.post(\"follow/\".concat(userId)).then(function(response){return response.data;});},getProfile:function getProfile(userId){console.warn('Obsolete method. Please use profileAPI object.');return profileAPI.getProfile(userId);}};export var profileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\".concat(userId));},getStatus:function getStatus(userId){return instance.get(\"profile/status/\".concat(userId));},updateStatus:function updateStatus(status){return instance.put(\"profile/status/\",{status:status});},savePhoto:function savePhoto(photoFile){var formData=new FormData();formData.append(\"image\",photoFile);return instance.put(\"profile/photo/\",formData,{headers:{'Content-Type':'multipart/form-data'}});},saveProfile:function saveProfile(profile){return instance.put(\"profile/\",profile);}};export var ResultCodesEnum;(function(ResultCodesEnum){ResultCodesEnum[ResultCodesEnum[\"Success\"]=0]=\"Success\";ResultCodesEnum[ResultCodesEnum[\"Error\"]=1]=\"Error\";})(ResultCodesEnum||(ResultCodesEnum={}));export var ResultCodeForCaptcha;(function(ResultCodeForCaptcha){ResultCodeForCaptcha[ResultCodeForCaptcha[\"CaptchaIsRequired\"]=10]=\"CaptchaIsRequired\";})(ResultCodeForCaptcha||(ResultCodeForCaptcha={}));export var authAPI={me:function me(){return instance.get(\"auth/me\").then(function(res){return res.data;});//.then(response => response.data);\n},login:function login(email,password){var rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var captcha=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return instance.post(\"auth/login\",{email:email,password:password,rememberMe:rememberMe,captcha:captcha}).then(function(res){return res.data;});},logout:function logout(){return instance.delete(\"auth/login\");}};export var securityAPI={getCaptchaUrl:function getCaptchaUrl(){return instance.get(\"security/get-captcha-url\");}};","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/api/api.ts"],"names":["axios","instance","create","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","ResultCodesEnum","ResultCodeForCaptcha","authAPI","me","res","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {ProfileType} from \"../types/types\";\n\nconst instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"7201ac99-56ac-41c0-b5a7-4e3d810f5e00\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data);\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n            .then(response => response.data);\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n            .then(response => response.data);\n    },\n    getProfile(userId: number) {\n        console.warn('Obsolete method. Please use profileAPI object.');\n        return profileAPI.getProfile(userId);\n    }\n};\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`profile/${userId}`);\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`);\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status/`, {status: status});\n    },\n    savePhoto(photoFile: any) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile);\n        return instance.put(`profile/photo/`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile: ProfileType) {\n        return instance.put(`profile/`, profile);\n    }\n};\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport enum ResultCodeForCaptcha {\n    CaptchaIsRequired = 10\n}\n\ntype MeResponseType = {\n    data: { id: number, email: string, login: string }\n    resultCode: ResultCodesEnum\n    messages: Array<string>\n}\n\ntype LoginResponseType = {\n    data: { userId: number }\n    resultCode: ResultCodesEnum | ResultCodeForCaptcha\n    messages: Array<string>\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get<MeResponseType>(`auth/me`).then(res => res.data);\n        //.then(response => response.data);\n    },\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\n        return instance.post<LoginResponseType>(`auth/login`, {email, password, rememberMe, captcha}).then(res => res.data);\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n};\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n};"]},"metadata":{},"sourceType":"module"}