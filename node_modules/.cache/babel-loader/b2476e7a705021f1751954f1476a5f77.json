{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 23\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: state.posts.length + 1,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(p => p.id !== action.postId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTOS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  let response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(photos));\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","length","newPostText","filter","p","postId","addPostActionCreator","setUserProfile","deletePost","savePhotoSuccess","photos","SAVE_PHOTOS","getUserProfile","userId","dispatch","response","getProfile","data","setStatus","getStatus","updateStatus","resultCode","savePhoto","file"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 0},\n        {id: 2, message: 'It\\'s my first post', likesCount: 23}\n    ],\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state, posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\n\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTOS, photos});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(photos));\n    }\n};\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}