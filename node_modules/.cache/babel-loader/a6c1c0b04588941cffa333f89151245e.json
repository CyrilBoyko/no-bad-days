{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 23\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: state.posts.length + 1,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case DELETE_POST:\n      {\n        return { ...state,\n          posts: state.posts.filter(p => p.id !== action.postId)\n        };\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\nexport const savePhotoSuccess = photos => ({\n  type: SAVE_PHOTO_SUCCESS,\n  photos\n});\nexport const getUserProfile = userId => async dispatch => {\n  const response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getStatus = userId => async dispatch => {\n  const response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  const response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  const response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    dispatch(stopSubmit(\"edit-profile\", {\n      _error: response.data.messages[0]\n    }));\n    return Promise.reject();\n  }\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","length","newPostText","filter","p","postId","photos","addPostActionCreator","setUserProfile","deletePost","savePhotoSuccess","getUserProfile","userId","dispatch","response","getProfile","data","setStatus","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","_error","messages","Promise","reject"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 0},\n        {id: 2, message: 'It\\'s my first post', likesCount: 23}\n    ],\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state, posts: state.posts.filter(p => p.id !== action.postId)\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state, profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\n\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response.data));\n};\n\nexport const setStatus = (status) => ({type: SET_STATUS, status});\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    const response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    const response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n};\n\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\n        return Promise.reject();\n    }\n};\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}