{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hi, how are you?',\n        likesCount: 0\n      }, {\n        id: 2,\n        message: 'It\\'s my first post',\n        likesCount: 23\n      }],\n      newPostText: 'write something'\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Cyril'\n      }, {\n        id: 2,\n        name: 'Ilya'\n      }, {\n        id: 3,\n        name: 'Nata'\n      }, {\n        id: 4,\n        name: 'Andy'\n      }, {\n        id: 5,\n        name: 'Kate'\n      }, {\n        id: 6,\n        name: 'Max'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Oi!'\n      }, {\n        id: 2,\n        message: 'How is it going?'\n      }, {\n        id: 3,\n        message: 'Check out my new project on git!'\n      }, {\n        id: 4,\n        message: 'I need a job so bad!'\n      }, {\n        id: 5,\n        message: 'Going crazy...'\n      }],\n      newMessageText: 'write something'\n    },\n    sidebar: {}\n  },\n\n  _callSubscriber() {\n    console.log('State changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 3,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'ADD-MESSAGE') {\n      let newMessage = {\n        id: 6,\n        message: this._state.dialogsPage.newMessageText\n      };\n\n      this._state.dialogsPage.messages.push(newMessage);\n\n      this._state.dialogsPage.newMessageText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') {\n      this._state.dialogsPage.newMessageText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => {\n  return {\n    type: ADD_POST\n  };\n};\nexport const updateNewPostTextActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nexport const addMessageActionCreator = () => {\n  return {\n    type: 'ADD-MESSAGE'\n  };\n};\nexport const updateNewMessageTextActionCreator = text => {\n  return {\n    type: 'UPDATE-NEW-MESSAGE-TEXT',\n    newText: text\n  };\n};\nexport default store;\nwindow.store = store;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/redux/state.js"],"names":["ADD_POST","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageText","sidebar","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","addPostActionCreator","updateNewPostTextActionCreator","text","addMessageActionCreator","updateNewMessageTextActionCreator","window"],"mappings":"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","sourcesContent":["const ADD_POST = 'ADD-POST';\n\nlet store = {\n    _state: {\n\n        profilePage: {\n            posts: [\n                {id: 1, message: 'Hi, how are you?', likesCount: 0},\n                {id: 2, message: 'It\\'s my first post', likesCount: 23}\n            ],\n            newPostText: 'write something'\n        },\n\n        dialogsPage: {\n            dialogs: [\n                {id: 1, name: 'Cyril'},\n                {id: 2, name: 'Ilya'},\n                {id: 3, name: 'Nata'},\n                {id: 4, name: 'Andy'},\n                {id: 5, name: 'Kate'},\n                {id: 6, name: 'Max'}\n            ],\n            messages: [\n                {id: 1, message: 'Oi!'},\n                {id: 2, message: 'How is it going?'},\n                {id: 3, message: 'Check out my new project on git!'},\n                {id: 4, message: 'I need a job so bad!'},\n                {id: 5, message: 'Going crazy...'},\n            ],\n            newMessageText: 'write something'\n        },\n        sidebar: {}\n    },\n    _callSubscriber() {\n        console.log('State changed');\n    },\n\n    getState(){\n        return this._state;\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 3,\n                message: this._state.profilePage.newPostText,\n                likesCount: 0\n            };\n            this._state.profilePage.posts.push(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        } else if (action.type === 'UPDATE-NEW-POST-TEXT') {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        } else if (action.type === 'ADD-MESSAGE') {\n            let newMessage = {\n                id: 6,\n                message: this._state.dialogsPage.newMessageText\n            };\n            this._state.dialogsPage.messages.push(newMessage);\n            this._state.dialogsPage.newMessageText = '';\n            this._callSubscriber(this._state);\n        } else if (action.type === 'UPDATE-NEW-MESSAGE-TEXT') {\n            this._state.dialogsPage.newMessageText = action.newText;\n            this._callSubscriber(this._state);\n        }\n        }\n    }\n\nexport const addPostActionCreator = () => {\n    return {\n        type: ADD_POST\n    }\n}\n\nexport const updateNewPostTextActionCreator = (text) => {\n    return {\n        type: 'UPDATE-NEW-POST-TEXT',\n        newText: text\n    }\n}\n\nexport const addMessageActionCreator = () => {\n    return {\n        type: 'ADD-MESSAGE'\n    }\n}\n\nexport const updateNewMessageTextActionCreator = (text) => {\n    return {\n        type: 'UPDATE-NEW-MESSAGE-TEXT',\n        newText: text\n    }\n}\n\nexport default store;\nwindow.store = store;"]},"metadata":{},"sourceType":"module"}