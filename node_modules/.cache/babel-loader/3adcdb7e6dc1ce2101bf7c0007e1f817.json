{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\n\nconst Dialogs = props => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/React.createElement(DialogItem, {\n    name: d.name,\n    key: d.id,\n    id: d.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 51\n    }\n  }));\n  let messagesElements = state.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    key: m.id,\n    message: m.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 53\n    }\n  }));\n  let newMessageText = state.newMessageText;\n  let newMessageElement = React.createRef();\n\n  let onAddMessageClick = () => {\n    props.addMessage();\n  };\n\n  let onMessageChange = e => {\n    let text = e.target.value;\n    props.updateNewMessageText(text);\n  };\n\n  let addNewMessage = values => {\n    props.addMessage(values.newMessageText);\n  };\n\n  if (!props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogsItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, dialogsElements), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, messagesElements), /*#__PURE__*/React.createElement(AddMessageFormRedux, {\n    onSubmit: addNewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: \"textarea\",\n    name: \"newMessageText\",\n    placeholder: \"Enter your message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\n\nconst AddMessageFormRedux = reduxForm({\n  form: 'dialogAddMessageForm'\n})(AddMessageForm);\nexport default Dialogs;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","DialogItem","Message","Redirect","Field","reduxForm","Dialogs","props","state","dialogsPage","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","newMessageText","newMessageElement","createRef","onAddMessageClick","addMessage","onMessageChange","e","text","target","value","updateNewMessageText","addNewMessage","values","isAuth","dialogsItems","AddMessageForm","handleSubmit","AddMessageFormRedux","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classes from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Redirect} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} /> );\n\n    let messagesElements = state.messages.map( m => <Message key={m.id} message={m.message}/>);\n\n    let newMessageText = state.newMessageText;\n\n    let newMessageElement = React.createRef();\n\n    let onAddMessageClick = () => {\n        props.addMessage();\n    }\n\n    let onMessageChange = (e) => {\n        let text = e.target.value;\n        props.updateNewMessageText(text);\n    }\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageText);\n    }\n\n    if (!props.isAuth) return <Redirect to='/login' /> ;\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={classes.messages}>\n                <div>{messagesElements}</div>\n                <AddMessageFormRedux onSubmit={ addNewMessage } />\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component='textarea' name='newMessageText' placeholder='Enter your message'/>\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n    const AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}