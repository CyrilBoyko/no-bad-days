{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/Login/Login.tsx\";\nimport React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { createField, Input, LoginFormValuesType } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, createField('Email', 'email', [required], Input), createField('Password', 'password', [required], Input, {\n    type: 'password'\n  }), createField(undefined, 'rememberMe', [], Input, {\n    type: 'checkbox'\n  }), captchaUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 28\n    }\n  }), captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {}, 'Remember me'), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: '/profile',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: props.captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  captchaUrl: state.auth.captchaUrl,\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/Login/Login.tsx"],"names":["React","reduxForm","createField","Input","LoginFormValuesType","required","connect","login","Redirect","style","LoginForm","handleSubmit","error","captchaUrl","type","undefined","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, Input, LoginFormValuesType} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\nimport {AppStateType} from \"../../redux/redux-store\";\n\ntype LoginFormOwnProps = {\n    captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField<LoginFormValuesTypeKeys>('Email', 'email', [required], Input)}\n            {createField<LoginFormValuesTypeKeys>('Password', 'password', [required], Input, {type: 'password'})}\n            {createField<LoginFormValuesTypeKeys>(undefined, 'rememberMe', [], Input, {type: 'checkbox'})}\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && createField<LoginFormValuesTypeKeys>('Symbols from image', 'captcha', [required], Input, {}, 'Remember me')}\n            {error && <div className={style.formSummaryError}>{error}</div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n};\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm);\n\ntype MapStatePropsType = {\n    captchaUrl: string | null\n    isAuth: boolean\n}\n\ntype MapDispatchPropsType = {\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\nexport type LoginFormValuesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string\n}\n\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\n\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\n\n    const onSubmit = (formData: LoginFormValuesType) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}\n                        captchaUrl={props.captchaUrl}/>\n    </div>\n};\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}