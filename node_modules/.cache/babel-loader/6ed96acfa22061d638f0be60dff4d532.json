{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/hoc/withAuthRedirect.js\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 44\n        }\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 20\n        }\n      }));\n    }\n\n  }\n\n  let mapStateToPropsForRedirect = state => ({\n    isAuth: state.auth.isAuth\n  });\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\n  return RedirectComponent;\n};","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/hoc/withAuthRedirect.js"],"names":["React","Redirect","connect","withAuthRedirect","Component","RedirectComponent","render","props","isAuth","mapStateToPropsForRedirect","state","auth","ConnectedAuthRedirectComponent","AuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCL,KAAK,CAACI,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWC,MAAhB,EAAwB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,0BAAO,oBAAC,SAAD,oBAAe,KAAKD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAJ2C;;AAOhD,MAAIE,0BAA0B,GAAIC,KAAD,KAAY;AACzCF,IAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADsB,GAAZ,CAAjC;;AAIA,MAAII,8BAA8B,GAAGV,OAAO,CAACO,0BAAD,CAAP,CAAoCI,qBAApC,CAArC;AAGA,SAAOR,iBAAP;AACH,CAhBM","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />\n        }\n    }\n\n    let mapStateToPropsForRedirect = (state) => ({\n        isAuth: state.auth.isAuth\n    });\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent)\n\n\n    return RedirectComponent;\n}"]},"metadata":{},"sourceType":"module"}