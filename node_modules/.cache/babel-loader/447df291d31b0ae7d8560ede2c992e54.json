{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setUsers, unfollow, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress, getUsersThunkCreator } from \"../../redux/users-reducer\";\nimport Users from \"./Users.jsx\";\nimport * as axios from \"axios\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { usersAPI } from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.getUsers(pageNumber, this.props.pageSize);\n      /*this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n          this.props.toggleIsFetching(false);\n          this.props.setUsers(data.items);\n      });*/\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      toggleFollowingProgress: this.props.toggleFollowingProgress,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n/*let mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber));\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount));\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching));\n        }\n        }\n}*/\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleFollowingProgress,\n  getUsers: getUsersThunkCreator\n})(UsersContainer);","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setCurrentPage","setUsers","unfollow","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","Users","axios","Preloader","usersAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,QAHJ,EAIIC,QAJJ,EAKIC,kBALJ,EAMIC,gBANJ,EAMsBC,uBANtB,EAM+CC,oBAN/C,QAOO,2BAPP;AAQA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AAEA,MAAMC,cAAN,SAA6Bd,KAAK,CAACe,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,aALyC,GAKxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWC,QAAX,CAAoBF,UAApB,EAAgC,KAAKC,KAAL,CAAWE,QAA3C;AACA;;;;;;AAMH,KAbwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWI,WAA/B,EAA4C,KAAKJ,KAAL,CAAWE,QAAvD;AACH;;AAYDG,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKL,KAAL,CAAWM,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IADrC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKN,KAAL,CAAWO,eAAnC;AACO,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWI,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKN,aAH3B;AAIO,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWQ,KAJzB;AAKO,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWhB,MAL1B;AAMO,MAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWb,QAN5B;AAOO,MAAA,uBAAuB,EAAE,KAAKa,KAAL,CAAWV,uBAP3C;AAQO,MAAA,mBAAmB,EAAE,KAAKU,KAAL,CAAWS,mBARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAYH;;AA5BwC;;AA+B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,KAAK,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,KADpB;AAEHN,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBV,QAFvB;AAGHK,IAAAA,eAAe,EAAEI,KAAK,CAACC,SAAN,CAAgBL,eAH9B;AAIHH,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKHE,IAAAA,UAAU,EAAEK,KAAK,CAACC,SAAN,CAAgBN,UALzB;AAMHG,IAAAA,mBAAmB,EAAEE,KAAK,CAACC,SAAN,CAAgBH;AANlC,GAAP;AAQH,CATD;AAWA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAe1B,OAAO,CAAC2B,eAAD,EAAkB;AACpC1B,EAAAA,MADoC;AAEpCG,EAAAA,QAFoC;AAGpCD,EAAAA,QAHoC;AAIpCD,EAAAA,cAJoC;AAKpCG,EAAAA,kBALoC;AAMpCC,EAAAA,gBANoC;AAOpCC,EAAAA,uBAPoC;AAQpCW,EAAAA,QAAQ,EAAEV;AAR0B,CAAlB,CAAP,CASZK,cATY,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    setUsers,\n    unfollow,\n    setTotalUsersCount,\n    toggleIsFetching, toggleFollowingProgress, getUsersThunkCreator\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users.jsx\";\nimport * as axios from \"axios\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {usersAPI} from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.getUsers(pageNumber, this.props.pageSize);\n        /*this.props.toggleIsFetching(true);\n        this.props.setCurrentPage(pageNumber);\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.toggleIsFetching(false);\n            this.props.setUsers(data.items);\n        });*/\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\n                   followingInProgress={this.props.followingInProgress}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress,\n    }\n}\n\n/*let mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber));\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount));\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching));\n        }\n        }\n}*/\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    toggleIsFetching,\n    toggleFollowingProgress,\n    getUsers: getUsersThunkCreator\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}