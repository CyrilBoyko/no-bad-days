{"ast":null,"code":"import * as axios from \"axios\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST'; //const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 23\n  }],\n  //newPostText: '',\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: state.posts.length + 1,\n          message: action.newPostText,\n          likesCount: 0\n        };\n        return { ...state,\n          posts: [...state.posts, newPost] //newPostText: ''\n\n        };\n      }\n\n    /*case ADD_POST: {\n        let newPost = {\n            id: state.posts.length + 1,\n            message: state.newPostText,\n            likesCount: 0\n        };\n        return {\n            ...state,\n            posts: [...state.posts, newPost],\n            newPostText: ''\n        }\n    }*/\n\n    /*case UPDATE_NEW_POST_TEXT: {\n        return {\n            ...state,\n            newPostText: action.newText\n        }\n    }*/\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\n/*export const updateNewPostTextActionCreator = (text) => ({\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n})*/\n\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const getUserProfile = userId => dispatch => {\n  usersAPI.getProfile(userId).then(response => {\n    dispatch(setUserProfile(response.data));\n  });\n};\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\n/*export const setUserProfileThunk = (id) => {\n    return (dispatch) => {\n        let userId = id;\n        if (!userId) {\n            userId = 9231;\n        }\n        profileAPI.getUserProfile()\n            .then(data => {\n                dispatch(setUserProfile(data.data));\n            });\n    }\n}*/\n\nexport default profileReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/redux/profile-reducer.js"],"names":["axios","profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","newPost","length","newPostText","addPostActionCreator","setUserProfile","getUserProfile","userId","dispatch","getProfile","then","response","data","setStatus","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\nimport {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\n//const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS'\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 0},\n        {id: 2, message: 'It\\'s my first post', likesCount: 23}\n    ],\n    //newPostText: '',\n    profile: null,\n    status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: state.posts.length + 1,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                //newPostText: ''\n            }\n        }\n        /*case ADD_POST: {\n            let newPost = {\n                id: state.posts.length + 1,\n                message: state.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            }\n        }*/\n        /*case UPDATE_NEW_POST_TEXT: {\n            return {\n                ...state,\n                newPostText: action.newText\n            }\n        }*/\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        default:\n            return state;\n        }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\n\n/*export const updateNewPostTextActionCreator = (text) => ({\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n})*/\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\nexport const getUserProfile = (userId) => (dispatch) => {\n    usersAPI.getProfile(userId).then(response => {\n        dispatch(setUserProfile(response.data));\n    });\n}\n\nexport const setStatus = (status) => ({type: SET_STATUS, status})\n\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getStatus(userId).then(response => {\n        dispatch(setStatus(response.data));\n    });\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n    });\n}\n\n/*export const setUserProfileThunk = (id) => {\n    return (dispatch) => {\n        let userId = id;\n        if (!userId) {\n            userId = 9231;\n        }\n        profileAPI.getUserProfile()\n            .then(data => {\n                dispatch(setUserProfile(data.data));\n            });\n    }\n}*/\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}