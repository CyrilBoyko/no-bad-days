{"ast":null,"code":"import React from 'react';\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n/*const MyPostsContainer = () => {\n\n    return (\n        <StoreContext.Consumer>\n            { store => {\n                let state = store.getState();\n\n                let addPost = () => {\n                    store.dispatch(addPostActionCreator());\n                }\n\n                let onPostChange = (text) => {\n                    let action = updateNewPostTextActionCreator(text);\n                    store.dispatch(action);\n                }\n\n                return <MyPosts addPost={addPost}\n                                updateNewPostText={onPostChange}\n                                posts={state.profilePage.posts}\n                                newPostText={state.profilePage.newPostText}/>\n            }\n        }\n        </StoreContext.Consumer>\n    )\n}*/\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    /* addPost: () => {\n         dispatch(addPostActionCreator());\n     },*/\n    addPost: newPostText => {\n      dispatch(addPostActionCreator(newPostText));\n    }\n    /*updateNewPostText: (text) => {\n        let action = updateNewPostTextActionCreator(text);\n        dispatch(action);\n    }*/\n\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","addPostActionCreator","MyPosts","connect","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","addPost","MyPostsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,oBAAR,QAAmC,gCAAnC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,WAAN,CAAkBD,KADtB;AAEHE,IAAAA,WAAW,EAAEH,KAAK,CAACE,WAAN,CAAkBC;AAF5B,GAAP;AAIH,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACJ;;;AAGCC,IAAAA,OAAO,EAAGH,WAAD,IAAiB;AACtBE,MAAAA,QAAQ,CAACT,oBAAoB,CAACO,WAAD,CAArB,CAAR;AACH;AACD;;;;;AAPG,GAAP;AAYH,CAbD;;AAeA,MAAMI,gBAAgB,GAAGT,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAeU,gBAAf","sourcesContent":["import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n/*const MyPostsContainer = () => {\n\n    return (\n        <StoreContext.Consumer>\n            { store => {\n                let state = store.getState();\n\n                let addPost = () => {\n                    store.dispatch(addPostActionCreator());\n                }\n\n                let onPostChange = (text) => {\n                    let action = updateNewPostTextActionCreator(text);\n                    store.dispatch(action);\n                }\n\n                return <MyPosts addPost={addPost}\n                                updateNewPostText={onPostChange}\n                                posts={state.profilePage.posts}\n                                newPostText={state.profilePage.newPostText}/>\n            }\n        }\n        </StoreContext.Consumer>\n    )\n}*/\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n       /* addPost: () => {\n            dispatch(addPostActionCreator());\n        },*/\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n        /*updateNewPostText: (text) => {\n            let action = updateNewPostTextActionCreator(text);\n            dispatch(action);\n        }*/\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}