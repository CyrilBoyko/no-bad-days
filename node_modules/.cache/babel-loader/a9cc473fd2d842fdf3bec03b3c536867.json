{"ast":null,"code":"const ADD_MESSAGE = 'SN/DIALOGS/ADD-MESSAGE';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Cyril'\n  }, {\n    id: 2,\n    name: 'Ilya'\n  }, {\n    id: 3,\n    name: 'Nata'\n  }, {\n    id: 4,\n    name: 'Andy'\n  }, {\n    id: 5,\n    name: 'Kate'\n  }, {\n    id: 6,\n    name: 'Max'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Oi!'\n  }, {\n    id: 2,\n    message: 'How is it going?'\n  }, {\n    id: 3,\n    message: 'Check out my new project on git!'\n  }, {\n    id: 4,\n    message: 'I need a job so bad!'\n  }, {\n    id: 5,\n    message: 'Going crazy...'\n  }]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newMessage = action.newMessageText;\n      return { ...state,\n        messages: [...state.messages, {\n          id: state.messages.length + 1,\n          message: newMessage\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\n/*\nexport const addMessageActionCreator = (newMessageText: string): AddMessageActionCreatorActionType => ({type: ADD_MESSAGE, newMessageText});*/\nexport const actions = {\n  addMessageActionCreator: newMessageText => ({\n    type: ADD_MESSAGE,\n    newMessageText\n  })\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/redux/dialogs-reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","newMessageText","length","actions","addMessageActionCreator"],"mappings":"AAEA,MAAMA,WAAW,GAAG,wBAApB;AAYA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GANK,CADM;AASfC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADM,EAEN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFM,EAGN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHM,EAIN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJM,EAKN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GALM;AATK,CAAnB;;AAsBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAyD;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,WAAL;AACI,UAAIW,UAAU,GAAGF,MAAM,CAACG,cAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoB;AAACF,UAAAA,EAAE,EAAEK,KAAK,CAACH,QAAN,CAAeQ,MAAf,GAAwB,CAA7B;AAAgCP,UAAAA,OAAO,EAAEK;AAAzC,SAApB;AAFP,OAAP;;AAIJ;AACI,aAAOH,KAAP;AARR;AAUH,CAXD;;AAiBA;;AAGA,OAAO,MAAMM,OAAO,GAAG;AACnBC,EAAAA,uBAAuB,EAAGH,cAAD,KAA6B;AAACF,IAAAA,IAAI,EAAEV,WAAP;AAAoBY,IAAAA;AAApB,GAA7B;AADN,CAAhB;AAIP,eAAeL,cAAf","sourcesContent":["import {InferActionsTypes} from \"./redux-store\";\n\nconst ADD_MESSAGE = 'SN/DIALOGS/ADD-MESSAGE';\n\ntype DialogType = {\n    id: number\n    name: string\n}\n\ntype MessageType = {\n    id: number\n    message: string\n}\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: 'Cyril'},\n        {id: 2, name: 'Ilya'},\n        {id: 3, name: 'Nata'},\n        {id: 4, name: 'Andy'},\n        {id: 5, name: 'Kate'},\n        {id: 6, name: 'Max'}\n    ] as Array<DialogType>,\n    messages: [\n        {id: 1, message: 'Oi!'},\n        {id: 2, message: 'How is it going?'},\n        {id: 3, message: 'Check out my new project on git!'},\n        {id: 4, message: 'I need a job so bad!'},\n        {id: 5, message: 'Going crazy...'},\n    ] as Array<MessageType>,\n};\n\nexport type initialStateType = typeof initialState\n\ntype ActionsType = InferActionsTypes<typeof action>\n\nconst dialogsReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            let newMessage = action.newMessageText;\n            return {\n                ...state,\n                messages: [...state.messages, {id: state.messages.length + 1, message: newMessage}]\n            };\n        default:\n            return state;\n    }\n};\n\ntype AddMessageActionCreatorActionType = {\ntype: typeof ADD_MESSAGE\n    newMessageText: string\n}\n/*\nexport const addMessageActionCreator = (newMessageText: string): AddMessageActionCreatorActionType => ({type: ADD_MESSAGE, newMessageText});*/\n\nexport const actions = {\n    addMessageActionCreator: (newMessageText: string) => ({type: ADD_MESSAGE, newMessageText} as const)\n}\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}