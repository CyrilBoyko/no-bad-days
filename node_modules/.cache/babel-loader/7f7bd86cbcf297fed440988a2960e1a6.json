{"ast":null,"code":"import _regeneratorRuntime from\"/Users/a1/Desktop/app/no-bad-days-social-network-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/a1/Desktop/app/no-bad-days-social-network-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/a1/Desktop/app/no-bad-days-social-network-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ResultCodeForCaptchaEnum,ResultCodesEnum}from\"../api/api\";import{stopSubmit}from\"redux-form\";import{authAPI}from\"../api/auth-api\";import{securityAPI}from\"../api/security-api\";var initialState={userId:null,email:null,login:null,isAuth:false,captchaUrl:null// if null, then captcha is not required\n};var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'SN/auth/SET_USER_DATA':case'SN/auth/GET_CAPTCHA_URL_SUCCESS':return _objectSpread({},state,{},action.payload);default:return state;}};export var actions={setAuthUserData:function setAuthUserData(userId,email,login,isAuth){return{type:'SN/auth/SET_USER_DATA',payload:{userId:userId,email:email,login:login,isAuth:isAuth}};},getCaptchaUrlSuccess:function getCaptchaUrlSuccess(captchaUrl){return{type:'SN/auth/GET_CAPTCHA_URL_SUCCESS',payload:{captchaUrl:captchaUrl}};}};export var getAuthUserData=function getAuthUserData(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var meData,_meData$data,id,email,_login;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return authAPI.me();case 2:meData=_context.sent;if(meData.resultCode===ResultCodesEnum.Success){_meData$data=meData.data,id=_meData$data.id,email=_meData$data.email,_login=_meData$data.login;dispatch(actions.setAuthUserData(id,email,_login,true));}case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var login=function login(email,password,rememberMe,captcha){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var data,message;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return authAPI.login(email,password,rememberMe,captcha);case 2:data=_context2.sent;if(data.resultCode===ResultCodesEnum.Success){// success, get auth data\ndispatch(getAuthUserData());}else{if(data.resultCode===ResultCodeForCaptchaEnum.CaptchaIsRequired){dispatch(getCaptchaUrl());}message=data.messages.length>0?data.messages[0]:\"Some error\";dispatch(stopSubmit(\"login\",{_error:message}));}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getCaptchaUrl=function getCaptchaUrl(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var data,captchaUrl;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return securityAPI.getCaptchaUrl();case 2:data=_context3.sent;captchaUrl=data.url;dispatch(actions.getCaptchaUrlSuccess(captchaUrl));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var logout=function logout(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return authAPI.logout();case 2:response=_context4.sent;if(response.data.resultCode===ResultCodesEnum.Success){dispatch(actions.setAuthUserData(null,null,null,false));}case 4:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export default authReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/redux/auth-reducer.ts"],"names":["ResultCodeForCaptchaEnum","ResultCodesEnum","stopSubmit","authAPI","securityAPI","initialState","userId","email","login","isAuth","captchaUrl","authReducer","state","action","type","payload","actions","setAuthUserData","getCaptchaUrlSuccess","getAuthUserData","dispatch","me","meData","resultCode","Success","data","id","password","rememberMe","captcha","CaptchaIsRequired","getCaptchaUrl","message","messages","length","_error","url","logout","response"],"mappings":"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","sourcesContent":["import {ResultCodeForCaptchaEnum, ResultCodesEnum} from \"../api/api\";\nimport {FormAction, stopSubmit} from \"redux-form\";\nimport {authAPI} from \"../api/auth-api\";\nimport {securityAPI} from \"../api/security-api\";\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\n\nlet initialState = {\n    userId: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false as boolean,\n    captchaUrl: null as string | null // if null, then captcha is not required\n};\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case 'SN/auth/SET_USER_DATA':\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\n            return {\n                ...state,\n                ...action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport const actions = {\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\n        type: 'SN/auth/SET_USER_DATA', payload:\n            {userId, email, login, isAuth}\n    } as const),\n    getCaptchaUrlSuccess: (captchaUrl: string) => ({\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS',\n        payload: {captchaUrl}\n    } as const)\n};\n\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\n    const meData = await authAPI.me();\n\n    if (meData.resultCode === ResultCodesEnum.Success) {\n        let {id, email, login} = meData.data;\n        dispatch(actions.setAuthUserData(id, email, login, true));\n    }\n};\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\n    const data = await authAPI.login(email, password, rememberMe, captcha);\n    if (data.resultCode === ResultCodesEnum.Success) {\n        // success, get auth data\n        dispatch(getAuthUserData())\n    } else {\n        if (data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\n            dispatch(getCaptchaUrl());\n        }\n        let message = data.messages.length > 0 ? data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n};\n\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\n    const data = await securityAPI.getCaptchaUrl();\n    const captchaUrl = data.url;\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\n};\n\nexport const logout = (): ThunkType => async (dispatch) => {\n    const response = await authAPI.logout();\n    if (response.data.resultCode === ResultCodesEnum.Success) {\n        dispatch(actions.setAuthUserData(null, null, null, false));\n    }\n};\n\nexport default authReducer;\n\nexport type InitialStateType = typeof initialState\n\ntype ActionsType = InferActionsTypes<typeof actions>\n\ntype ThunkType = BaseThunkType<ActionsType | FormAction>"]},"metadata":{},"sourceType":"module"}