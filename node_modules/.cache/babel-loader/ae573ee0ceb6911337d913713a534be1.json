{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.refreshProfile();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","getUserProfile","updateStatus","withRouter","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","match","params","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,YAAnC,QAAsD,6BAAtD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAEA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAE3CC,EAAAA,cAAc,GAAG;AACb,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACT,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AAED,SAAKL,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B;AAEA,SAAKC,KAAL,CAAWV,SAAX,CAAqBS,MAArB;AAEH;;AAEDO,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,cAAL;AACH;;AAEDS,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,SAAKZ,cAAL;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,OAAD,oBAAa,KAAKX,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWY,OAA7C;AACS,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWa,MAD5B;AAES,MAAA,YAAY,EAAE,KAAKb,KAAL,CAAWR,YAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAKH;;AA/B0C;;AAkC/C,IAAIsB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAQ;AACJH,IAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADvB;AAEJC,IAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFtB;AAGJV,IAAAA,gBAAgB,EAAEY,KAAK,CAACE,IAAN,CAAWlB,MAHzB;AAIJmB,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJf,GAAR;AAMH,CAPD;;AASA,eAAevB,OAAO,CAClBN,OAAO,CAACyB,eAAD,EAAkB;AAACvB,EAAAA,cAAD;AAAiBD,EAAAA,SAAjB;AAA4BE,EAAAA;AAA5B,CAAlB,CADW,EAElBC,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login');\n            }\n        }\n\n        this.props.getUserProfile(userId);\n\n        this.props.getStatus(userId);\n\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.refreshProfile();\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n};\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);"]},"metadata":{},"sourceType":"module"}