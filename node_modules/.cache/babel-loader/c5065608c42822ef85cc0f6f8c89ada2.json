{"ast":null,"code":"import _objectWithoutProperties from\"/Users/a1/Desktop/app/no-bad-days-social-network-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import styles from\"./FormsControls.module.css\";import{Field}from\"redux-form\";var FormControl=function FormControl(_ref){var _ref$meta=_ref.meta,touched=_ref$meta.touched,error=_ref$meta.error,children=_ref.children;var hasError=touched&&error;return/*#__PURE__*/React.createElement(\"div\",{className:styles.formControl+\" \"+(hasError?styles.error:\"\")},/*#__PURE__*/React.createElement(\"div\",null,children),hasError&&/*#__PURE__*/React.createElement(\"span\",null,error));};export var Textarea=function Textarea(props){var input=props.input,meta=props.meta,restProps=_objectWithoutProperties(props,[\"input\",\"meta\"]);return/*#__PURE__*/React.createElement(FormControl,props,/*#__PURE__*/React.createElement(\"textarea\",Object.assign({},input,restProps)));};export var Input=function Input(props){var input=props.input,meta=props.meta,restProps=_objectWithoutProperties(props,[\"input\",\"meta\"]);return/*#__PURE__*/React.createElement(FormControl,props,\" \",/*#__PURE__*/React.createElement(\"input\",Object.assign({},input,restProps)),\" \");};export function createField(placeholder,name,validators,component){var props=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var text=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'';return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,Object.assign({placeholder:placeholder,name:name,validate:validators,component:component},props)),\" \",text);}","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/common/FormsControls/FormsControls.tsx"],"names":["React","styles","Field","FormControl","meta","touched","error","children","hasError","formControl","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text"],"mappings":"gMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAAQC,KAAR,KAA8D,YAA9D,CAOA,GAAMC,CAAAA,WAA2C,CAAG,QAA9CA,CAAAA,WAA8C,MAAwC,oBAAtCC,IAAsC,CAA/BC,OAA+B,WAA/BA,OAA+B,CAAtBC,KAAsB,WAAtBA,KAAsB,CAAdC,QAAc,MAAdA,QAAc,CACxF,GAAMC,CAAAA,QAAQ,CAAGH,OAAO,EAAIC,KAA5B,CAEA,mBACI,2BAAK,SAAS,CAAEL,MAAM,CAACQ,WAAP,CAAqB,GAArB,EAA4BD,QAAQ,CAAGP,MAAM,CAACK,KAAV,CAAkB,EAAtD,CAAhB,eACI,+BACKC,QADL,CADJ,CAIKC,QAAQ,eAAI,gCAAOF,KAAP,CAJjB,CADJ,CAQH,CAXD,CAaA,MAAO,IAAMI,CAAAA,QAAqC,CAAG,QAAxCA,CAAAA,QAAwC,CAACC,KAAD,CAAW,IACrDC,CAAAA,KADqD,CACxBD,KADwB,CACrDC,KADqD,CAC9CR,IAD8C,CACxBO,KADwB,CAC9CP,IAD8C,CACrCS,SADqC,0BACxBF,KADwB,mBAE5D,mBAAO,oBAAC,WAAD,CAAiBA,KAAjB,cAAwB,gDAAcC,KAAd,CAAyBC,SAAzB,EAAxB,CAAP,CACH,CAHM,CAKP,MAAO,IAAMC,CAAAA,KAAkC,CAAG,QAArCA,CAAAA,KAAqC,CAACH,KAAD,CAAW,IAClDC,CAAAA,KADkD,CACrBD,KADqB,CAClDC,KADkD,CAC3CR,IAD2C,CACrBO,KADqB,CAC3CP,IAD2C,CAClCS,SADkC,0BACrBF,KADqB,mBAEzD,mBAAO,oBAAC,WAAD,CAAiBA,KAAjB,kBAAyB,6CAAWC,KAAX,CAAsBC,SAAtB,EAAzB,KAAP,CAEH,CAJM,CAOP,MAAO,SAASE,CAAAA,WAAT,CAAkDC,WAAlD,CACkDC,IADlD,CAEkDC,UAFlD,CAGkDC,SAHlD,CAK6D,IADXR,CAAAA,KACW,2DADH,EACG,IAAXS,CAAAA,IAAW,2DAAJ,EAAI,CAChE,mBAAO,4CACH,oBAAC,KAAD,gBAAO,WAAW,CAAEJ,WAApB,CACO,IAAI,CAAEC,IADb,CAEO,QAAQ,CAAEC,UAFjB,CAGO,SAAS,CAAEC,SAHlB,EAIWR,KAJX,EADG,KAKkBS,IALlB,CAAP,CAOH","sourcesContent":["import React from \"react\"\nimport styles from \"./FormsControls.module.css\"\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\"\nimport {FieldValidatorType} from \"../../../utils/validators/validators\"\n\ntype FormControlPropsType = {\n    meta: WrappedFieldMetaProps\n}\n\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n};\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n};\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props;\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\n\n};\n\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n                                                         name: FormKeysType,\n                                                         validators: Array<FieldValidatorType>,\n                                                         component: React.FC<WrappedFieldProps>,\n                                                         props = {},\n                                                         text = '') {\n    return <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n               component={component}\n               {...props}/> {text}\n    </div>\n}"]},"metadata":{},"sourceType":"module"}