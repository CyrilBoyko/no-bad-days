{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport classes from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogs-reducer\";\n\nconst Dialogs = props => {\n  let state = props.store.getState().dialogsPage;\n  let dialogsElements = state.dialogs.map(d => /*#__PURE__*/React.createElement(DialogItem, {\n    name: d.name,\n    id: d.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 51\n    }\n  }));\n  let messagesElements = state.messages.map(m => /*#__PURE__*/React.createElement(Message, {\n    message: m.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 53\n    }\n  }));\n  let newMessageText = state.newMessageText;\n  let newMessageElement = React.createRef();\n\n  let addMessage = () => {\n    props.store.dispatch(addMessageActionCreator());\n  };\n\n  let onMessageChange = e => {\n    let text = e.target.value;\n    props.updateMessageText(text);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogsItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, dialogsElements), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, messagesElements), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Enter your message\",\n    onChange: onMessageChange,\n    ref: newMessageElement,\n    value: newMessageText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Send\")))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","DialogItem","Message","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","props","state","store","getState","dialogsPage","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","newMessageText","newMessageElement","createRef","addMessage","dispatch","onMessageChange","e","text","target","value","updateMessageText","dialogsItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,uBAAR,EAAiCC,iCAAjC,QAAyE,6BAAzE;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;AAEA,MAAIC,eAAe,GAAGJ,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAmBC,CAAC,iBAAI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACC,IAApB;AAA0B,IAAA,EAAE,EAAED,CAAC,CAACE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAtB;AAEA,MAAIC,gBAAgB,GAAGV,KAAK,CAACW,QAAN,CAAeL,GAAf,CAAoBM,CAAC,iBAAI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CAAvB;AAEA,MAAIC,cAAc,GAAGd,KAAK,CAACc,cAA3B;AAEA,MAAIC,iBAAiB,GAAGvB,KAAK,CAACwB,SAAN,EAAxB;;AAEA,MAAIC,UAAU,GAAG,MAAM;AACnBlB,IAAAA,KAAK,CAACE,KAAN,CAAYiB,QAAZ,CAAqBtB,uBAAuB,EAA5C;AACH,GAFD;;AAIA,MAAIuB,eAAe,GAAIC,CAAD,IAAO;AACzB,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AACAxB,IAAAA,KAAK,CAACyB,iBAAN,CAAwBH,IAAxB;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAACY,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACgC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMrB,eADN,CADJ,eAII;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACkB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,gBAAN,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAU,IAAA,WAAW,EAAC,oBAAtB;AAA2C,IAAA,QAAQ,EAAES,eAArD;AAAsE,IAAA,GAAG,EAAEJ,iBAA3E;AAA8F,IAAA,KAAK,EAAED,cAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CAHJ,CAFJ,CAJJ,CADJ;AAiBH,CAtCD;;AAwCA,eAAenB,OAAf","sourcesContent":["import React from 'react';\nimport classes from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\n\nconst Dialogs = (props) => {\n\n    let state = props.store.getState().dialogsPage;\n\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} id={d.id} /> );\n\n    let messagesElements = state.messages.map( m => <Message message={m.message}/>);\n\n    let newMessageText = state.newMessageText;\n\n    let newMessageElement = React.createRef();\n\n    let addMessage = () => {\n        props.store.dispatch(addMessageActionCreator());\n    }\n\n    let onMessageChange = (e) => {\n        let text = e.target.value;\n        props.updateMessageText(text);\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsItems}>\n                { dialogsElements }\n            </div>\n            <div className={classes.messages}>\n                <div>{messagesElements}</div>\n                <div>\n                    <div><textarea placeholder='Enter your message' onChange={onMessageChange} ref={newMessageElement} value={newMessageText}/>\n                    </div>\n                    <div>\n                        <button onClick={addMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}