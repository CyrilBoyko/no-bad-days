{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/components/Users/Paginator.jsx\";\nimport React from \"react\";\nimport styles from \"./users.module.css\";\n\nlet Paginator = props => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  }, pages.map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: props.currentPage === p && styles.selectedPage,\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }\n    }, p);\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Users/Paginator.jsx"],"names":["React","styles","Paginator","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","map","p","currentPage","selectedPage","e","onPageChanged"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,IAAIC,SAAS,GAAIC,KAAD,IAAW;AAEvB,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB;AAEA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFD,KAAK,CAACG,GAAN,CAAUC,CAAC,IAAI;AACZ,wBAAO;AAAM,MAAA,SAAS,EAAEV,KAAK,CAACW,WAAN,KAAsBD,CAAtB,IAA2BZ,MAAM,CAACc,YAAnD;AACM,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZb,QAAAA,KAAK,CAACc,aAAN,CAAoBJ,CAApB;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGUA,CAHV,CAAP;AAIH,GALA,CADE,CAAP;AAQH,CAjBD;;AAmBA,eAAeX,SAAf","sourcesContent":["import React from \"react\";\nimport styles from \"./users.module.css\";\n\nlet Paginator = (props) => {\n\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div>\n        {pages.map(p => {\n            return <span className={props.currentPage === p && styles.selectedPage}\n                         onClick={(e) => {\n                             props.onPageChanged(p);\n                         }}>{p}</span>\n        })}\n    </div>\n}\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}