{"ast":null,"code":"const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: 'Cyril'\n  }, {\n    id: 2,\n    name: 'Ilya'\n  }, {\n    id: 3,\n    name: 'Nata'\n  }, {\n    id: 4,\n    name: 'Andy'\n  }, {\n    id: 5,\n    name: 'Kate'\n  }, {\n    id: 6,\n    name: 'Max'\n  }],\n  messages: [{\n    id: 1,\n    message: 'Oi!'\n  }, {\n    id: 2,\n    message: 'How is it going?'\n  }, {\n    id: 3,\n    message: 'Check out my new project on git!'\n  }, {\n    id: 4,\n    message: 'I need a job so bad!'\n  }, {\n    id: 5,\n    message: 'Going crazy...'\n  }] //newMessageText: ''\n\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newMessage = action.newMessageText;\n      return { ...state,\n        newMessageText: '',\n        messages: [...state.messages, {\n          id: state.messages.length + 1,\n          message: newMessage\n        }]\n      };\n\n    case UPDATE_NEW_MESSAGE_TEXT:\n      return { ...state,\n        newMessageText: action.newText\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addMessageActionCreator = newMessageText => ({\n  type: ADD_MESSAGE,\n  newMessageText\n});\nexport const updateNewMessageTextActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newText: text\n});\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/redux/dialogs-reducer.js"],"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","newMessageText","length","newText","addMessageActionCreator","updateNewMessageTextActionCreator","text"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAI;AAChBC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GADK,EAEL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GALK,EAML;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GANK,CADO;AAShBC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GADM,EAEN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAFM,EAGN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAHM,EAIN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GAJM,EAKN;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQG,IAAAA,OAAO,EAAE;AAAjB,GALM,CATM,CAgBhB;;AAhBgB,CAApB;;AAmBA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAL;AACA,UAAIY,UAAU,GAAGF,MAAM,CAACG,cAAxB;AACA,aAAO,EACH,GAAGJ,KADA;AAEHI,QAAAA,cAAc,EAAE,EAFb;AAGHP,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoB;AAACF,UAAAA,EAAE,EAAEK,KAAK,CAACH,QAAN,CAAeQ,MAAf,GAAwB,CAA7B;AAAgCP,UAAAA,OAAO,EAAEK;AAAzC,SAApB;AAHP,OAAP;;AAKJ,SAAKX,uBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHI,QAAAA,cAAc,EAAEH,MAAM,CAACK;AAFpB,OAAP;;AAIJ;AACI,aAAON,KAAP;AAdJ;AAgBH,CAjBD;;AAmBA,OAAO,MAAMO,uBAAuB,GAAIH,cAAD,KAAqB;AAACF,EAAAA,IAAI,EAAEX,WAAP;AAAoBa,EAAAA;AAApB,CAArB,CAAhC;AAEP,OAAO,MAAMI,iCAAiC,GAAIC,IAAD,KAAW;AACxDP,EAAAA,IAAI,EAAEV,uBADkD;AAExDc,EAAAA,OAAO,EAAEG;AAF+C,CAAX,CAA1C;AAKP,eAAeV,cAAf","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\n\nlet initialState =  {\n    dialogs: [\n        {id: 1, name: 'Cyril'},\n        {id: 2, name: 'Ilya'},\n        {id: 3, name: 'Nata'},\n        {id: 4, name: 'Andy'},\n        {id: 5, name: 'Kate'},\n        {id: 6, name: 'Max'}\n    ],\n    messages: [\n        {id: 1, message: 'Oi!'},\n        {id: 2, message: 'How is it going?'},\n        {id: 3, message: 'Check out my new project on git!'},\n        {id: 4, message: 'I need a job so bad!'},\n        {id: 5, message: 'Going crazy...'},\n    ],\n    //newMessageText: ''\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n        let newMessage = action.newMessageText;\n        return {\n            ...state,\n            newMessageText: '',\n            messages: [...state.messages, {id: state.messages.length + 1, message: newMessage}]\n        };\n    case UPDATE_NEW_MESSAGE_TEXT:\n        return {\n            ...state,\n            newMessageText: action.newText\n        };\n    default:\n        return state;\n    }\n}\n\nexport const addMessageActionCreator = (newMessageText) => ({type: ADD_MESSAGE, newMessageText})\n\nexport const updateNewMessageTextActionCreator = (text) => ({\n    type: UPDATE_NEW_MESSAGE_TEXT,\n    newText: text\n})\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}