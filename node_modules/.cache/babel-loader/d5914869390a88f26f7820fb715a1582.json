{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/Users/UsersContainer.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { setCurrentPage, toggleFollowingProgress, requestUsers, follow, unfollow } from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers } from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize\n      } = this.props;\n      this.props.getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 38\n      }\n    }) : null, /*#__PURE__*/React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose( // <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState>\nconnect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  toggleFollowingProgress,\n  getUsers: requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/a1/Desktop/app/no-bad-days-social-network-demo/src/components/Users/UsersContainer.tsx"],"names":["React","connect","setCurrentPage","toggleFollowingProgress","requestUsers","follow","unfollow","Users","Preloader","compose","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsers","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAwC,aAAxC;AACA,SAAQC,cAAR,EAAwBC,uBAAxB,EAAiDC,YAAjD,EAA+DC,MAA/D,EAAuEC,QAAvE,QAAsF,2BAAtF;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,sBAFJ,EAGIC,aAHJ,EAIIC,WAJJ,EAKIC,kBALJ,EAKwBC,QALxB,QAMO,6BANP;;AA2BA,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAAwD;AAAA;AAAA;;AAAA,SAMpDC,aANoD,GAMnCC,UAAD,IAAwB;AACpC,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAxB;AACA,WAAKA,KAAL,CAAWN,QAAX,CAAoBI,UAApB,EAAgCC,QAAhC;AACH,KATmD;AAAA;;AACpDE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAArC;AACA,SAAKA,KAAL,CAAWN,QAAX,CAAoBQ,WAApB,EAAiCH,QAAjC;AACH;;AAODI,EAAAA,MAAM,GAAG;AACL,wBAAO,0CACF,KAAKH,KAAL,CAAWI,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAuC,IADrC,eAEH,oBAAC,KAAD;AAAO,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eAAnC;AACO,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAF/B;AAGO,MAAA,aAAa,EAAE,KAAKL,aAH3B;AAIO,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWM,KAJzB;AAKO,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWhB,MAL1B;AAMO,MAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWf,QAN5B;AAOO,MAAA,mBAAmB,EAAE,KAAKe,KAAL,CAAWO,mBAPvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAWH;;AAvBmD;;AA0BxD,IAAIC,eAAe,GAAIC,KAAD,IAA4C;AAC9D,SAAO;AACHH,IAAAA,KAAK,EAAEZ,QAAQ,CAACe,KAAD,CADZ;AAEHV,IAAAA,QAAQ,EAAEP,WAAW,CAACiB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEZ,kBAAkB,CAACgB,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEb,cAAc,CAACoB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEb,aAAa,CAACkB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAEjB,sBAAsB,CAACmB,KAAD;AANxC,GAAP;AAQH,CATD;;AAWA,eAAerB,OAAO,EAClB;AACAR,OAAO,CAAwD4B,eAAxD,EAAyE;AAACxB,EAAAA,MAAD;AAASC,EAAAA,QAAT;AAAmBJ,EAAAA,cAAnB;AAAmCC,EAAAA,uBAAnC;AAA4DY,EAAAA,QAAQ,EAAEX;AAAtE,CAAzE,CAFW,CAAP,CAGbY,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport {connect, DefaultRootState} from \"react-redux\";\nimport {setCurrentPage, toggleFollowingProgress, requestUsers, follow, unfollow} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers,\n} from \"../../redux/users-selectors\";\nimport {UserType} from \"../../types/types\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\ntype MapStatePropsType = {\n    currentPage: number\n    pageSize: number\n    isFetching: boolean\n    totalUsersCount: number\n    users: Array<UserType>\n    followingInProgress: Array<number>\n}\n\ntype MapDispatchPropsType = {\n    getUsers: (currentPage: number, pageSize: number) => void\n    follow: () => void\n    unfollow: () => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber: number) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    };\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n};\n\nexport default compose(\n    // <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState>\n    connect<MapStatePropsType, MapDispatchPropsType, AppStateType>(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer);"]},"metadata":{},"sourceType":"module"}