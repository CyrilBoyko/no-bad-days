{"ast":null,"code":"import * as axios from \"axios\";\nimport { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 0\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 23\n  }],\n  newPostText: '',\n  profile: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: state.posts.length + 1,\n        message: state.newPostText,\n        likesCount: 0\n      };\n      return { ...state,\n        posts: [...state.posts, newPost],\n        newPostText: ''\n      };\n\n    case UPDATE_NEW_POST_TEXT:\n      return { ...state,\n        newPostText: action.newText\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setUserProfileThunk = pofile => {\n  return dispatch => {\n    let userId = profile;\n\n    if (!userId) {\n      userId = 9231;\n    }\n\n    profileAPI.getUserProfile(profile).then(data => {\n      dispatch(setUserProfile(data.data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/redux/profile-reducer.js"],"names":["axios","profileAPI","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","length","newText","addPostActionCreator","updateNewPostTextActionCreator","text","setUserProfile","setUserProfileThunk","pofile","dispatch","userId","getUserProfile","then","data"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,kBAAjB;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GADG,EAEH;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,OAAO,EAAE,qBAAjB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GAFG,CADQ;AAKfC,EAAAA,WAAW,EAAE,EALE;AAMfC,EAAAA,OAAO,EAAE;AANM,CAAnB;;AASA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,QAAL;AACI,UAAIc,OAAO,GAAG;AACVT,QAAAA,EAAE,EAAEM,KAAK,CAACP,KAAN,CAAYW,MAAZ,GAAqB,CADf;AAEVT,QAAAA,OAAO,EAAEK,KAAK,CAACH,WAFL;AAGVD,QAAAA,UAAU,EAAE;AAHF,OAAd;AAKA,aAAO,EACH,GAAGI,KADA;AAEHP,QAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiBU,OAAjB,CAFJ;AAGHN,QAAAA,WAAW,EAAE;AAHV,OAAP;;AAKJ,SAAKP,oBAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,WAAW,EAAEI,MAAM,CAACI;AAFjB,OAAP;;AAIJ,SAAKd,gBAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAFb,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,OAAO,MAAMM,oBAAoB,GAAG,OAAO;AAACJ,EAAAA,IAAI,EAAEb;AAAP,CAAP,CAA7B;AAEP,OAAO,MAAMkB,8BAA8B,GAAIC,IAAD,KAAW;AACrDN,EAAAA,IAAI,EAAEZ,oBAD+C;AAErDe,EAAAA,OAAO,EAAEG;AAF4C,CAAX,CAAvC;AAKP,OAAO,MAAMC,cAAc,GAAIX,OAAD,KAAc;AAACI,EAAAA,IAAI,EAAEX,gBAAP;AAAyBO,EAAAA;AAAzB,CAAd,CAAvB;AAEP,OAAO,MAAMY,mBAAmB,GAAIC,MAAD,IAAY;AAC3C,SAAQC,QAAD,IAAc;AACjB,QAAIC,MAAM,GAAGf,OAAb;;AACA,QAAI,CAACe,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,IAAT;AACH;;AACDzB,IAAAA,UAAU,CAAC0B,cAAX,CAA0BhB,OAA1B,EACKiB,IADL,CACUC,IAAI,IAAI;AACVJ,MAAAA,QAAQ,CAACH,cAAc,CAACO,IAAI,CAACA,IAAN,CAAf,CAAR;AACH,KAHL;AAIH,GATD;AAUH,CAXM;AAaP,eAAejB,cAAf","sourcesContent":["import * as axios from \"axios\";\nimport {profileAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 0},\n        {id: 2, message: 'It\\'s my first post', likesCount: 23}\n    ],\n    newPostText: '',\n    profile: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: state.posts.length + 1,\n                message: state.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n                newPostText: ''\n            };\n        case UPDATE_NEW_POST_TEXT:\n            return {\n                ...state,\n                newPostText: action.newText\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        default:\n            return state;\n        }\n}\n\nexport const addPostActionCreator = () => ({type: ADD_POST})\n\nexport const updateNewPostTextActionCreator = (text) => ({\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n})\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\nexport const setUserProfileThunk = (pofile) => {\n    return (dispatch) => {\n        let userId = profile;\n        if (!userId) {\n            userId = 9231;\n        }\n        profileAPI.getUserProfile(profile)\n            .then(data => {\n                dispatch(setUserProfile(data.data));\n            });\n    }\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}