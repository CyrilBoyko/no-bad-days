{"ast":null,"code":"var _jsxFileName = \"/Users/a1/Desktop/app/my-app/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from 'react';\nimport { addMessageActionCreator, updateNewMessageTextActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport connect from \"react-redux/lib/connect/connect\";\n\nconst DialogsContainer = () => {\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, store => {\n    let state = store.getState().dialogsPage;\n\n    let onAddMessageClick = () => {\n      store.dispatch(addMessageActionCreator());\n    };\n\n    let onMessageChange = text => {\n      let action = updateNewMessageTextActionCreator(text);\n      store.dispatch(action);\n    };\n\n    return /*#__PURE__*/React.createElement(Dialogs, {\n      updateNewMessageText: onMessageChange,\n      addMessage: onAddMessageClick,\n      dialogsPage: state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    });\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    dialogsPage: state.dialogsPage\n  };\n};\n\nlet mapDispatchToProps = () => {\n  return {\n    updateNewMessageText: () => {},\n    addMessage: () => {}\n  };\n};\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/a1/Desktop/app/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","addMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","StoreContext","connect","DialogsContainer","store","state","getState","dialogsPage","onAddMessageClick","dispatch","onMessageChange","text","action","mapStateToProps","mapDispatchToProps","updateNewMessageText","addMessage","SuperDialogsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,uBAAR,EAAiCC,iCAAjC,QAAyE,6BAAzE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KAAK,IAAI;AACN,QAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,GAAiBC,WAA7B;;AAEA,QAAIC,iBAAiB,GAAG,MAAM;AAC1BJ,MAAAA,KAAK,CAACK,QAAN,CAAeX,uBAAuB,EAAtC;AACH,KAFD;;AAIA,QAAIY,eAAe,GAAIC,IAAD,IAAU;AAC5B,UAAIC,MAAM,GAAGb,iCAAiC,CAACY,IAAD,CAA9C;AACAP,MAAAA,KAAK,CAACK,QAAN,CAAeG,MAAf;AACH,KAHD;;AAIA,wBACI,oBAAC,OAAD;AAAS,MAAA,oBAAoB,EAAEF,eAA/B;AACS,MAAA,UAAU,EAAEF,iBADrB;AAES,MAAA,WAAW,EAAEH,KAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH,GAjBL,CADJ;AAsBH,CAxBD;;AA0BA,IAAIQ,eAAe,GAAIR,KAAD,IAAW;AAC7B,SAAO;AACHE,IAAAA,WAAW,EAAEF,KAAK,CAACE;AADhB,GAAP;AAGH,CAJD;;AAMA,IAAIO,kBAAkB,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,oBAAoB,EAAE,MAAM,CAAE,CAD3B;AAEHC,IAAAA,UAAU,EAAE,MAAM,CAAE;AAFjB,GAAP;AAIH,CALD;;AAOA,MAAMC,qBAAqB,GAAGf,OAAO,CAACW,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,OAA7C,CAA9B;AAEA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport connect from \"react-redux/lib/connect/connect\";\n\nconst DialogsContainer = () => {\n\n    return (\n        <StoreContext.Consumer>\n            {store => {\n                let state = store.getState().dialogsPage;\n\n                let onAddMessageClick = () => {\n                    store.dispatch(addMessageActionCreator());\n                }\n\n                let onMessageChange = (text) => {\n                    let action = updateNewMessageTextActionCreator(text)\n                    store.dispatch(action);\n                }\n                return (\n                    <Dialogs updateNewMessageText={onMessageChange}\n                             addMessage={onAddMessageClick}\n                             dialogsPage={state}/>\n                )\n            }\n            }\n        </StoreContext.Consumer>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = () => {\n    return {\n        updateNewMessageText: () => {},\n        addMessage: () => {}\n    }\n}\n\nconst SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}